// Code generated by mockery v2.12.3. DO NOT EDIT.

package fake

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Secrets is an autogenerated mock type for the Secrets type
type Secrets struct {
	mock.Mock
}

// GetAPIToken provides a mock function with given fields: ctx, provider
func (_m *Secrets) GetAPIToken(ctx context.Context, provider string) (string, error) {
	ret := _m.Called(ctx, provider)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, provider)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, provider)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutAPIToken provides a mock function with given fields: ctx, provider, token
func (_m *Secrets) PutAPIToken(ctx context.Context, provider string, token string) error {
	ret := _m.Called(ctx, provider, token)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, provider, token)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewSecretsT interface {
	mock.TestingT
	Cleanup(func())
}

// NewSecrets creates a new instance of Secrets. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSecrets(t NewSecretsT) *Secrets {
	mock := &Secrets{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
